<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/4/12 0012 * Time: 16:48 */namespace app\system\controller;use app\common\model\ConfModel;use think\Db;use think\Request;class Conf extends Common{    /**     * 支付宝配置     */    public function alipay(){        $name = 'alipay';        if(Request::instance()->isPost()){            $conf_content = input('conf_content/a');            $result = ConfModel::setConf($name,$conf_content);            if(!$result) return returnState(100,'设置失败');            return returnState(100,'设置成功');        }        return $this->fetch('',['info' => ConfModel::getConf($name)]);    }    /**     * 微信配置     */    public function wechat(){        $name = 'wechat';        if(Request::instance()->isPost()){            $conf_content = input('conf_content/a');            $file = request()->file('wechat_txt');            // 移动到框架应用根目录/public/uploads/ 目录下            if($file) $file->validate(['size'=>15678,'ext'=>'txt'])->move('./', $_FILES['wechat_txt']['name'], true);            $result = ConfModel::setConf($name,$conf_content);//            if(!$result) return returnState(100,'设置失败');//            return returnState(100,'设置成功');            if(!$result) return $this->error('设置失败');            return $this->success('设置成功');        }        return $this->fetch('',['info' => ConfModel::getConf($name)]);    }    /**     * 微信菜单设置     */    public function wechat_menu(){        $name = 'wechat_menu';        if(Request::instance()->isPost()){            $post_info = input('post.');            $button = $post_info['conf_content']['button'];            $new_button = [];            foreach ($button as $k=>$v){                $tmp = ['name'=>''];                foreach ($v['sub_button'] as $k1=>$v1){                    if(trim($v1['name']) != '' && trim($v1['url']) != ''){                        $tmp['sub_button'][] = [                            'name'=>$v1['name'],                            'type'=>'view',                            'url'=>$v1['url']                        ];                    }                }                if(isset($tmp['sub_button']) && count($tmp['sub_button'])>0){                    $tmp['name'] = $v['name'];                    $new_button['button'][] = $tmp;                }else{                    if(trim($v['name']) != '' && trim($v['url']) != ''){                        $tmp = [                            'name'=>$v['name'],                            'type'=>'view',                            'url'=>$v['url']                        ];                        $new_button['button'][] = $tmp;                    }                }            }            $post_info['conf_content']['button'] = $new_button['button'];            $post_info['conf_content'] = json_encode($post_info['conf_content']);            $post_info['conf_name'] = 'wechat_menu';            $map1['conf_name'] = ['eq','wechat_menu'];            $info = Db::name('config')->where($map1)->find();            if(!$info){                $flag = Db::name('config')->insertGetId($post_info);            }else{                $flag = Db::name('config')->where($map1)->update($post_info);            }            if(false !== $flag){                    $wechat_option = get_config('wechat');                    $wechat = new TPWechat($wechat_option);                    if(count($new_button['button']) > 0){                        $w_rs =  $wechat->createMenu($new_button);                    }                return $this->success('设置成功',url(''));            }else{                return $this->error('设置失败');            }        }        $info = Db::name('config')->where("conf_name",$name)->find();        self::assign("info",json_decode($info["conf_content"],true));        return self::fetch();    }    /**     * 微信支付设置     */    public function wechat_pay(){        $name = 'wechat_pay';        if(Request::instance()->isPost()){            $conf_content = input('conf_content/a');            // apiclient_cert            $file1 = request()->file('apiclient_cert');            if($file1) $file1->validate(['size'=>156788,'ext'=>'pem'])->move('./WxpayV3/cert/', $_FILES['wechat_txt']['name'], true);            // apiclient_key            $file2 = request()->file('apiclient_key');            if($file2) $file2->validate(['size'=>156788,'ext'=>'pem'])->move('./WxpayV3/cert/', $_FILES['wechat_txt']['name'], true);            $result = ConfModel::setConf($name,$conf_content);            if(!$result) return $this->error('设置失败');            return $this->success('设置成功');        }        return $this->fetch('',['info' => ConfModel::getConf($name)]);    }    /**     * 微信支付设置     */    public function tonglian_pay(){        $name = 'tonglian_pay';        if(Request::isPost()){            Db::startTrans();            try{                $option = [];                $this->save_conf($name,$option);                Db::commit();                return $this->success('设置成功',url(''));            }catch (\PDOException $e){                Db::rollback();                return $this->error('设置失败');            }        }        return $this->get_conf($name);    }}